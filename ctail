#!/usr/bin/env python3
import argparse, os, re

parser = argparse.ArgumentParser(
    prog='ctail',
    description='colorize log files',
    epilog="by @etragardh"
)
parser.add_argument(
    '-n',
    default=10,
    help='lines to tail'
)
parser.add_argument(
    'pos', nargs='*'
)

args = parser.parse_args()

####
## Print in Color

BLACK  = "\033[30m"
#RED    = "\033[31m"
RED = "\033[0;31m"
LIGHT_RED = "\033[1;31m"
GREEN  = "\033[32m"
YELLOW = "\033[33m"
BLUE   = "\033[34m"
PURPLE = "\033[35m"
CYAN   = "\033[36m"
WHITE  = "\033[37m"
LIGHT_WHITE = "\033[1;37m"

# bold
B    = "\033[1m"
BOFF = "\033[22m"

END = "\033[0m"

def colorize(line):
    line = re.sub("error", RED+B+"error"+END, line)
    line = re.sub("warn", YELLOW+B+"warn"+END, line)
    line = re.sub("notice", CYAN+B+"notice"+END, line)
    return line

# Function to read
# last N lines of the file
# Thanks: https://www.geeksforgeeks.org/python-reading-last-n-lines-of-a-file/
def LastNlines(fname, N):
    # taking buffer size of 8192 bytes
    bufsize = 8192

    # calculating size of
    # file in bytes
    fsize = os.stat(fname).st_size

    iter = 0

    # opening file using with() method
    # so that file get closed
    # after completing work
    with open(fname) as f:
        if bufsize > fsize:

            # adjusting buffer size
            # according to size
            # of file
            bufsize = fsize-1

            # list to store
            # last N lines
            fetched_lines = []

            # while loop to
            # fetch last N lines
            while True:
                iter += 1

                # moving cursor to
                # the last Nth line
                # of file
                position = fsize-bufsize * iter
                if position < 0:
                    position = 0 
                f.seek(position)

                # storing each line
                # in list upto
                # end of file
                fetched_lines.extend(f.readlines())

                # halting the program
                # when size of list
                # is equal or greater to
                # the number of lines requested or
                # when we reach end of file
                if len(fetched_lines) >= N or f.tell() == 0:
                        line = ''.join(fetched_lines[-N:])
                        print(colorize(line))
                        break
                if position == 0:
                    break

LastNlines(args.pos[0], int(args.n))
