#!/usr/bin/env python3
import sys, os, re, subprocess

####
## Print in Color

BLACK = "\033[0;30m"
RED = "\033[0;31m"
GREEN = "\033[0;32m"
BROWN = "\033[0;33m"
BLUE = "\033[0;34m"
PURPLE = "\033[0;35m"
CYAN = "\033[0;36m"
LIGHT_GRAY = "\033[0;37m"
YELLOW = "\033[0;33m"
DARK_GRAY = "\033[1;30m"
LIGHT_RED = "\033[1;31m"
LIGHT_GREEN = "\033[1;32m"
LIGHT_YELLOW = "\033[1;33m"
LIGHT_BLUE = "\033[1;34m"
LIGHT_PURPLE = "\033[1;35m"
LIGHT_CYAN = "\033[1;36m"
LIGHT_WHITE = "\033[1;37m"
BOLD = "\033[1m"
FAINT = "\033[2m"
ITALIC = "\033[3m"
UNDERLINE = "\033[4m"
BLINK = "\033[5m"
NEGATIVE = "\033[7m"
CROSSED = "\033[9m"
END = "\033[0m"


def colorize(line):
    color_patterns = {
        'error':RED+BOLD,
        'warn':YELLOW+BOLD,
        'notice':CYAN+BOLD,
        ' (5[0-9][0-9]) ':RED,                                  # 500
        ' (4[0-9][0-9]) ':YELLOW,                               # 400
        ' (3[0-9][0-9]) ':YELLOW,                               # 300
        ' (2[0-9][0-9]) ':GREEN,                                # 200
        '(GET|HEAD|POST|DELETE|PUTi|CONNECT|OPTIONS|TRACE|PATCH|PROPFIND)':'inherit',
        '\[(([A-Za-z]{3} ){2}[0-9]{2} )(.*?)\]':FAINT,          # time
        '\[([0-9]{2}\/[A-Za-z]{3})(.*?)\]':FAINT,               # time 2
        'HTTP/[0-3]\.[0-9]':FAINT,                              # HTTPS/1.0
        r'^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}':NEGATIVE, # IP
        '(install|\.env|config\.json|wp-config\.php|debug|\.log|\.git)':RED+NEGATIVE+BLINK,
    }
    color_line = line
    last_color = "\033[0;35m"
    for pattern, color in color_patterns.items():   # iterate
        txt = re.search(pattern, line)
        if txt:                                     # if match
            color = last_color if color == 'inherit' else color
            color_line = re.sub(pattern, color+txt[0]+END, color_line)
            last_color = color

    return color_line


# Remove first arg (script name)
args = sys.argv[1:]

try:
    cmd = ["tail", *args]
    with subprocess.Popen(cmd, stdout=subprocess.PIPE, bufsize=1, universal_newlines=True) as p:
        for line in p.stdout:
            print(colorize(line), end='') # process line here

    if p.returncode != 0:
        raise subprocess.CalledProcessError(p.returncode, p.args)

except(KeyboardInterrupt):
    exit()
